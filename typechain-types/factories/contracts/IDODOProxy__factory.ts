/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDODOProxy,
  IDODOProxyInterface,
} from "../../contracts/IDODOProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "dodoPairs",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "directions",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadLine",
        type: "uint256",
      },
    ],
    name: "dodoSwapV1",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "dodoPairs",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "directions",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isIncentive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadLine",
        type: "uint256",
      },
    ],
    name: "dodoSwapV2TokenToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDODOProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IDODOProxyInterface {
    return new utils.Interface(_abi) as IDODOProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDODOProxy {
    return new Contract(address, _abi, signerOrProvider) as IDODOProxy;
  }
}
